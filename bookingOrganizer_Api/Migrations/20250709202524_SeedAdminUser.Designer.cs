// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookingOrganizer_Api.Models;

#nullable disable

namespace bookingOrganizer_Api.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20250709202524_SeedAdminUser")]
    partial class SeedAdminUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bookingOrganizer_Api.Models.BookingInfo", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PurchaseMethod")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SeatNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TypeBookingId")
                        .HasColumnType("int");

                    b.HasKey("BookingId")
                        .HasName("PK__BookingI__73951AED45200D0B");

                    b.HasIndex("GroupId");

                    b.HasIndex("TypeBookingId");

                    b.ToTable("BookingInfo", (string)null);
                });

            modelBuilder.Entity("bookingOrganizer_Api.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("GroupId")
                        .HasName("PK__Groups__149AF36AF1039B53");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("bookingOrganizer_Api.Models.GroupMember", b =>
                {
                    b.Property<int>("GroupMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupMemberId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GroupMemberId")
                        .HasName("PK__GroupMem__3448129267F99235");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("bookingOrganizer_Api.Models.TypeBooking", b =>
                {
                    b.Property<int>("TypeBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeBookingId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TypeBookingId")
                        .HasName("PK__TypeBook__7D5A246FF094A373");

                    b.HasIndex(new[] { "TypeName" }, "UQ__TypeBook__D4E7DFA8E5EA2FA8")
                        .IsUnique();

                    b.ToTable("TypeBooking", (string)null);
                });

            modelBuilder.Entity("bookingOrganizer_Api.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CF252C45E");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534631987BF")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex(new[] { "UserName" }, "UQ__Users__C9F28456690B0F69")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "Administrator",
                            PasswordHash = "AQAAAAIAACcQAAAAEFa7VfG0Ozvhq4Zw1URzDDLwcWZmHHNOvgWe0hCeja+rG+56ms4YSQ2VrgmYyuAdMw==",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("bookingOrganizer_Api.Models.BookingInfo", b =>
                {
                    b.HasOne("bookingOrganizer_Api.Models.Group", "Group")
                        .WithMany("BookingInfos")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__BookingIn__Group__440B1D61");

                    b.HasOne("bookingOrganizer_Api.Models.TypeBooking", "TypeBooking")
                        .WithMany()
                        .HasForeignKey("TypeBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("TypeBooking");
                });

            modelBuilder.Entity("bookingOrganizer_Api.Models.GroupMember", b =>
                {
                    b.HasOne("bookingOrganizer_Api.Models.Group", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupMemb__Group__403A8C7D");

                    b.HasOne("bookingOrganizer_Api.Models.User", "User")
                        .WithMany("GroupMembers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__GroupMemb__UserI__412EB0B6");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("bookingOrganizer_Api.Models.Group", b =>
                {
                    b.Navigation("BookingInfos");

                    b.Navigation("GroupMembers");
                });

            modelBuilder.Entity("bookingOrganizer_Api.Models.User", b =>
                {
                    b.Navigation("GroupMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
